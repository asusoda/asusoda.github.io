{"version":3,"file":"static/js/494.db2df35f.chunk.js","mappings":"kJAEO,MAAMA,EACTC,IAAAA,CAAKC,GACD,MAAMC,EAAYD,EAASC,UAAgDC,EAAvBF,EAASG,QAAQC,KAAkCC,UAC7E,IAAAC,EAAtBJ,EAAcK,SACdP,EAASI,KAAKI,UAC0B,QAAnCF,EAACN,EAASS,OAAOC,0BAAkB,IAAAJ,EAAAA,EAAIL,EAAUQ,OAAOC,oBAAsBC,EAAAA,GAC3EV,EAAUQ,OAAOG,aACpBV,EAAcW,OACfb,EAASI,KAAKI,WAAYM,EAAAA,EAAAA,OAGtC,CACAC,SAAAA,CAAUf,GAAU,IAAAgB,EAAAC,EAAAC,EAAAC,EAChB,OAASnB,EAASoB,YACbpB,EAASqB,UACVrB,EAASI,KAAKG,UACU,QAAvBS,EAAChB,EAASI,KAAKkB,gBAAQ,IAAAN,EAAAA,EAjBnB,QAkBuB,QAAvBC,EAACjB,EAASI,KAAKkB,gBAAQ,IAAAL,EAAAA,EAlBvB,OAmBuB,QAApBC,EAAClB,EAASI,KAAKmB,aAAK,IAAAL,EAAAA,EAnBvB,IAmB8D,QAA3BC,EAAKnB,EAASI,KAAKkB,gBAAQ,IAAAH,EAAAA,EAnB9D,GAoBb,CACAK,KAAAA,CAAMxB,GACFA,EAASI,KAAKmB,MAtBL,CAuBb,CACAE,MAAAA,CAAOzB,EAAU0B,GACRC,KAAKZ,UAAUf,KAGpB4B,EAAAA,EAAAA,IAAgB5B,EAAUA,EAASI,MAAM,EAAMJ,EAASG,QAAQC,KAAKC,UAAUwB,QAASH,EAC5F,E","sources":["../node_modules/@tsparticles/updater-size/browser/SizeUpdater.js"],"sourcesContent":["import { getRandom, percentDenominator, updateAnimation, } from \"@tsparticles/engine\";\nconst minLoops = 0;\nexport class SizeUpdater {\n    init(particle) {\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                ((particle.retina.sizeAnimationSpeed ?? container.retina.sizeAnimationSpeed) / percentDenominator) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            ((particle.size.maxLoops ?? minLoops) <= minLoops ||\n                ((particle.size.maxLoops ?? minLoops) > minLoops &&\n                    (particle.size.loops ?? minLoops) < (particle.size.maxLoops ?? minLoops))));\n    }\n    reset(particle) {\n        particle.size.loops = minLoops;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateAnimation(particle, particle.size, true, particle.options.size.animation.destroy, delta);\n    }\n}\n"],"names":["SizeUpdater","init","particle","container","sizeAnimation","options","size","animation","_particle$retina$size","enable","velocity","retina","sizeAnimationSpeed","percentDenominator","reduceFactor","sync","getRandom","isEnabled","_particle$size$maxLoo","_particle$size$maxLoo2","_particle$size$loops","_particle$size$maxLoo3","destroyed","spawning","maxLoops","loops","reset","update","delta","this","updateAnimation","destroy"],"sourceRoot":""}