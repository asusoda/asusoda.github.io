{"version":3,"file":"static/js/927.b257c2f7.chunk.js","mappings":"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","sources":["../node_modules/@tsparticles/engine/browser/Core/Canvas.js","../node_modules/@tsparticles/engine/browser/Core/Utils/EventListeners.js","../node_modules/@tsparticles/engine/browser/Core/Utils/InteractionManager.js","../node_modules/@tsparticles/engine/browser/Core/Particle.js","../node_modules/@tsparticles/engine/browser/Core/Utils/Point.js","../node_modules/@tsparticles/engine/browser/Core/Utils/QuadTree.js","../node_modules/@tsparticles/engine/browser/Core/Particles.js","../node_modules/@tsparticles/engine/browser/Core/Retina.js","../node_modules/@tsparticles/engine/browser/Core/Container.js"],"sourcesContent":["import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils.js\";\nimport { deepExtend, getLogger, safeMutationObserver } from \"../Utils/Utils.js\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nimport { generatedAttribute } from \"./Utils/Constants.js\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key], defaultValue = 1;\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? defaultValue) * newValue;\n    }\n}\nfunction setStyle(canvas, style, important = false) {\n    if (!style) {\n        return;\n    }\n    const element = canvas;\n    if (!element) {\n        return;\n    }\n    const elementStyle = element.style;\n    if (!elementStyle) {\n        return;\n    }\n    for (const key in style) {\n        const value = style[key];\n        if (!value) {\n            continue;\n        }\n        elementStyle.setProperty(key, value, important ? \"important\" : \"\");\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this._applyPostDrawUpdaters = (particle) => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw?.(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw?.(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize?.();\n            }\n        };\n        this._getPluginParticleColors = (particle) => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = async () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color;\n            if (color) {\n                const coverRgb = rangeColorToRgb(color);\n                if (coverRgb) {\n                    const coverColor = {\n                        ...coverRgb,\n                        a: cover.opacity,\n                    };\n                    this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n                }\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!cover.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._coverImage = {\n                            image: img,\n                            opacity: cover.opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = cover.image;\n                });\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._originalStyle = deepExtend({}, element.style);\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            const factorNumerator = 1, opacity = factorNumerator / trail.length;\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = (baseColor) => {\n            this.draw((ctx) => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw((ctx) => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver((observer) => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver((observer) => observer.observe(element, { attributes: true }));\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!(element && originalStyle)) {\n                return;\n            }\n            setStyle(element, originalStyle);\n        };\n        this._safeMutationObserver = (callback) => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            const radix = 10;\n            setStyle(element, {\n                position: \"fixed\",\n                zIndex: this.container.actualOptions.fullScreen.zIndex.toString(radix),\n                top: \"0\",\n                left: \"0\",\n                width: \"100%\",\n                height: \"100%\",\n            }, true);\n        };\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill, minimumLength = 0;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > minimumLength && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else if (options.clear) {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element?.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawAsync(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return undefined;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius(), minimumSize = 0;\n        if (radius <= minimumSize) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zIndexFactorOffset = 1, zIndexFactor = zIndexFactorOffset - particle.zIndexFactor, zOpacityFactor = zIndexFactor ** zIndexOptions.opacityRate, defaultOpacity = 1, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? defaultOpacity, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * zIndexFactor ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = safeMutationObserver((records) => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        await this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor ?? plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles ?? updater.getTransformValues ?? updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                if (this._coverImage) {\n                    this._paintImage(this._coverImage.image, this._coverImage.opacity);\n                }\n                else if (this._coverColorStyle) {\n                    this._paintBase(this._coverColorStyle);\n                }\n                else {\n                    this._paintBase();\n                }\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...size };\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            container.particles.setResizeFactor({\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            });\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw((ctx) => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { millisecondsToSeconds, mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants.js\";\nimport { isBoolean } from \"../../Utils/TypeUtils.js\";\nconst double = 2;\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, (mode) => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                const touchDelay = 500;\n                setTimeout(() => this._mouseTouchFinish(), touchDelay);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find((theme) => theme.name === themeName);\n            if (theme && theme.default.auto) {\n                void container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document && document.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.animationStatus) {\n                    void container.play(true);\n                }\n                else {\n                    void container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            const handleResize = async () => {\n                const canvas = this.container.canvas;\n                await canvas?.windowResize();\n            };\n            this._resizeTimeout = setTimeout(() => void handleResize(), this.container.actualOptions.interactivity.events.resize.delay * millisecondsToSeconds);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            const interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === \"window\") {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === \"parent\" && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = (add) => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver((entries) => {\n                    const entry = entries.find((e) => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const [, plugin] of container.plugins) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = (e) => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity?.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === \"parent\") {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + double * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + double * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lengthOffset = 1, lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset], canvasRect = canvasEl.getBoundingClientRect(), defaultCoordinate = 0;\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? defaultCoordinate),\n                        y: lastTouch.clientY - (canvasRect.top ?? defaultCoordinate),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","export class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = [];\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.interact(delta);\n            }\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        this._interactors = await this._engine.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case \"external\":\n                    this._externalInteractors.push(interactor);\n                    break;\n                case \"particles\":\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.interact(particle, delta);\n            }\n        }\n    }\n    reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.reset(particle);\n            }\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.reset(particle);\n            }\n        }\n    }\n}\n","import { Vector, Vector3d } from \"./Utils/Vectors.js\";\nimport { calcExactPositionOrRandomFromSize, clamp, degToRad, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils.js\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils.js\";\nimport { errorPrefix, millisecondsToSeconds } from \"./Utils/Constants.js\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity.js\";\nimport { alterHsl } from \"../Utils/CanvasUtils.js\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils.js\";\nconst defaultRetryCount = 0, double = 2, half = 0.5, squareExp = 2;\nfunction loadEffectData(effect, effectOptions, id, reduceDuplicates) {\n    const effectData = effectOptions.options[effect];\n    if (!effectData) {\n        return;\n    }\n    return deepExtend({\n        close: effectOptions.close,\n        fill: effectOptions.fill,\n    }, itemFromSingleOrMultiple(effectData, id, reduceDuplicates));\n}\nfunction loadShapeData(shape, shapeOptions, id, reduceDuplicates) {\n    const shapeData = shapeOptions.options[shape];\n    if (!shapeData) {\n        return;\n    }\n    return deepExtend({\n        close: shapeOptions.close,\n        fill: shapeOptions.fill,\n    }, itemFromSingleOrMultiple(shapeData, id, reduceDuplicates));\n}\nfunction fixOutMode(data) {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * double;\n    if (data.coord > data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < diameter) {\n        data.setCb(data.radius);\n    }\n}\nexport class Particle {\n    constructor(engine, container) {\n        this.container = container;\n        this._calcPosition = (container, position, zIndex, tryCount = defaultRetryCount) => {\n            for (const [, plugin] of container.plugins) {\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n                if (pluginPos) {\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n                size: canvasSize,\n                position: position,\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\"],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value) => (pos.x += value),\n                    radius,\n                });\n            }, fixVertical = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\"],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value) => (pos.y += value),\n                    radius,\n                });\n            };\n            fixHorizontal(outModes.left ?? outModes.default);\n            fixHorizontal(outModes.right ?? outModes.default);\n            fixVertical(outModes.top ?? outModes.default);\n            fixVertical(outModes.bottom ?? outModes.default);\n            if (this._checkOverlap(pos, tryCount)) {\n                const increment = 1;\n                return this._calcPosition(container, undefined, zIndex, tryCount + increment);\n            }\n            return pos;\n        };\n        this._calculateVelocity = () => {\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n                return res;\n            }\n            const rad = degToRad(getRangeValue(moveOptions.angle.value)), radOffset = degToRad(getRangeValue(moveOptions.angle.offset)), range = {\n                left: radOffset - rad * half,\n                right: radOffset + rad * half,\n            };\n            if (!moveOptions.straight) {\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\n            }\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n                res.length *= getRandom();\n            }\n            return res;\n        };\n        this._checkOverlap = (pos, tryCount = defaultRetryCount) => {\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries, minRetries = 0;\n            if (retries >= minRetries && tryCount > retries) {\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n            }\n            return !!this.container.particles.find((particle) => getDistance(pos, particle.position) < radius + particle.getRadius());\n        };\n        this._getRollColor = (color) => {\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n                return color;\n            }\n            const rollFactor = 1, none = 0, backFactor = this.roll.horizontal && this.roll.vertical ? double * rollFactor : rollFactor, backSum = this.roll.horizontal ? Math.PI * half : none, rolled = Math.floor(((this.roll.angle ?? none) + backSum) / (Math.PI / backFactor)) % double;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = (position) => {\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value), minZ = 0;\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, minZ, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size, defaultRadius = 0;\n            this.moveCenter = {\n                ...getPosition(this.options.move.center, canvasSize),\n                radius: this.options.move.center.radius ?? defaultRadius,\n                mode: this.options.move.center.mode ?? \"percent\",\n            };\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n            switch (this.options.move.direction) {\n                case \"inside\":\n                    this.outType = \"inside\";\n                    break;\n                case \"outside\":\n                    this.outType = \"outside\";\n                    break;\n            }\n            this.offset = Vector.origin;\n        };\n        this._engine = engine;\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator, shapeDrawer = container.shapeDrawers.get(this.shape);\n        shapeDrawer?.particleDestroy?.(this);\n        for (const [, plugin] of container.plugins) {\n            plugin.particleDestroyed?.(this, override);\n        }\n        for (const updater of container.particles.updaters) {\n            updater.particleDestroyed?.(this, override);\n        }\n        pathGenerator?.reset(this);\n        this._engine.dispatchEvent(\"particleDestroyed\", {\n            container: this.container,\n            data: {\n                particle: this,\n            },\n        });\n    }\n    draw(delta) {\n        const container = this.container, canvas = container.canvas;\n        for (const [, plugin] of container.plugins) {\n            canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return this.getRadius() ** squareExp * Math.PI * half;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius ?? this.size.value;\n    }\n    getStrokeColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.effectClose = true;\n        this.effectFill = true;\n        this.shapeClose = true;\n        this.shapeFill = true;\n        this.pathRotation = false;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = \"normal\";\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), effectType = particlesOptions.effect.type, shapeType = particlesOptions.shape.type, { reduceDuplicates } = particlesOptions;\n        this.effect = itemFromSingleOrMultiple(effectType, this.id, reduceDuplicates);\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const effectOptions = particlesOptions.effect, shapeOptions = particlesOptions.shape;\n        if (overrideOptions) {\n            if (overrideOptions.effect?.type) {\n                const overrideEffectType = overrideOptions.effect.type, effect = itemFromSingleOrMultiple(overrideEffectType, this.id, reduceDuplicates);\n                if (effect) {\n                    this.effect = effect;\n                    effectOptions.load(overrideOptions.effect);\n                }\n            }\n            if (overrideOptions.shape?.type) {\n                const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n                if (shape) {\n                    this.shape = shape;\n                    shapeOptions.load(overrideOptions.shape);\n                }\n            }\n        }\n        this.effectData = loadEffectData(this.effect, effectOptions, this.id, reduceDuplicates);\n        this.shapeData = loadShapeData(this.shape, shapeOptions, this.id, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const effectData = this.effectData;\n        if (effectData) {\n            particlesOptions.load(effectData.particles);\n        }\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        this.effectFill = effectData?.fill ?? particlesOptions.effect.fill;\n        this.effectClose = effectData?.close ?? particlesOptions.effect.close;\n        this.shapeFill = shapeData?.fill ?? particlesOptions.shape.fill;\n        this.shapeClose = shapeData?.close ?? particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getRangeValue(pathOptions.delay.value) * millisecondsToSeconds;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        const decayOffset = 1;\n        this.moveDecay = decayOffset - getRangeValue(this.options.move.decay);\n        const particles = container.particles;\n        particles.setLastZIndex(this.position.z);\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let effectDrawer = container.effectDrawers.get(this.effect);\n        if (!effectDrawer) {\n            effectDrawer = this._engine.getEffectDrawer(this.effect);\n            if (effectDrawer) {\n                container.effectDrawers.set(this.effect, effectDrawer);\n            }\n        }\n        if (effectDrawer?.loadEffect) {\n            effectDrawer.loadEffect(this);\n        }\n        let shapeDrawer = container.shapeDrawers.get(this.shape);\n        if (!shapeDrawer) {\n            shapeDrawer = this._engine.getShapeDrawer(this.shape);\n            if (shapeDrawer) {\n                container.shapeDrawers.set(this.shape, shapeDrawer);\n            }\n        }\n        if (shapeDrawer?.loadShape) {\n            shapeDrawer.loadShape(this);\n        }\n        const sideCountFunc = shapeDrawer?.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of particles.movers) {\n            mover.init?.(this);\n        }\n        effectDrawer?.particleInit?.(container, this);\n        shapeDrawer?.particleInit?.(container, this);\n        for (const [, plugin] of container.plugins) {\n            plugin.particleCreated?.(this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return (position.x >= -radius &&\n            position.y >= -radius &&\n            position.y <= canvasSize.height + radius &&\n            position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters) {\n            updater.reset?.(this);\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","import { Circle, Rectangle } from \"./Ranges.js\";\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\nconst half = 0.5, double = 2, subdivideCount = 4;\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < subdivideCount; i++) {\n                const fixedIndex = i % double;\n                this._subs.push(new QuadTree(new Rectangle(x + width * half * fixedIndex, y + height * half * (Math.round(i * half) - fixedIndex), width * half, height * half), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some((sub) => sub.insert(point));\n    }\n    query(range, check) {\n        const res = [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                res.push(...sub.query(range, check));\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { getLogger, getPosition } from \"../Utils/Utils.js\";\nimport { InteractionManager } from \"./Utils/InteractionManager.js\";\nimport { Particle } from \"./Particle.js\";\nimport { Point } from \"./Utils/Point.js\";\nimport { QuadTree } from \"./Utils/QuadTree.js\";\nimport { Rectangle } from \"./Utils/Ranges.js\";\nimport { errorPrefix } from \"./Utils/Constants.js\";\nconst qTreeCapacity = 4, squareExp = 2, defaultRemoveQuantity = 1;\nconst qTreeRectangle = (canvasSize) => {\n    const { height, width } = canvasSize, posOffset = -0.25, sizeFactor = 1.5;\n    return new Rectangle(posOffset * width, posOffset * height, sizeFactor * width, sizeFactor * height);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._addToPool = (...particles) => {\n            for (const particle of particles) {\n                this._pool.push(particle);\n            }\n        };\n        this._applyDensity = (options, manualCount, group) => {\n            const numberOptions = options.number;\n            if (!options.number.density?.enable) {\n                if (group === undefined) {\n                    this._limit = numberOptions.limit.value;\n                }\n                else if (numberOptions.limit) {\n                    this._groupLimits.set(group, numberOptions.limit.value);\n                }\n                return;\n            }\n            const densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, minLimit = 0, optParticlesLimit = numberOptions.limit.value > minLimit ? numberOptions.limit.value : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter((t) => t.group === group).length);\n            if (group === undefined) {\n                this._limit = numberOptions.limit.value * densityFactor;\n            }\n            else {\n                this._groupLimits.set(group, numberOptions.limit.value * densityFactor);\n            }\n            if (particlesCount < particlesNumber) {\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = (densityOptions) => {\n            const container = this._container, defaultFactor = 1;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return defaultFactor;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.height * densityOptions.width * pxRatio ** squareExp);\n        };\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this._pool.pop();\n                if (!particle) {\n                    particle = new Particle(this._engine, this._container);\n                }\n                particle.init(this._nextId, position, overrideOptions, group);\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(\"particleAdded\", {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            const zIdx = this._zArray.indexOf(particle), deleteCount = 1;\n            this._array.splice(index, deleteCount);\n            this._zArray.splice(zIdx, deleteCount);\n            particle.destroy(override);\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            this._addToPool(particle);\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this._pool = [];\n        this._limit = 0;\n        this._groupLimits = new Map();\n        this._needsSort = false;\n        this._lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        this._pluginsInitialized = false;\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = [];\n        this.updaters = [];\n    }\n    get count() {\n        return this._array.length;\n    }\n    addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(particle.position ? getPosition(particle.position, container.canvas.size) : undefined, particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const limitOptions = this._container.actualOptions.particles.number.limit, limit = group === undefined ? this._limit : this._groupLimits.get(group) ?? this._limit, currentCount = this.count, minLimit = 0;\n        if (limit > minLimit) {\n            if (limitOptions.mode === \"delete\") {\n                const countOffset = 1, minCount = 0, countToRemove = currentCount + countOffset - limit;\n                if (countToRemove > minCount) {\n                    this.removeQuantity(countToRemove);\n                }\n            }\n            else if (limitOptions.mode === \"wait\") {\n                if (currentCount >= limit) {\n                    return;\n                }\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n        this._pluginsInitialized = false;\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    draw(delta) {\n        const container = this._container, canvas = container.canvas;\n        canvas.clear();\n        this.update(delta);\n        for (const [, plugin] of container.plugins) {\n            canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    get(index) {\n        return this._array[index];\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    async init() {\n        const container = this._container, options = container.actualOptions;\n        this._lastZIndex = 0;\n        this._needsSort = false;\n        await this.initPlugins();\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this.addManualParticles();\n        if (!handled) {\n            const particlesOptions = options.particles, groups = particlesOptions.groups;\n            for (const group in groups) {\n                const groupOptions = groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < particlesOptions.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < particlesOptions.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    async initPlugins() {\n        if (this._pluginsInitialized) {\n            return;\n        }\n        const container = this._container;\n        this.movers = await this._engine.getMovers(container, true);\n        this.updaters = await this._engine.getUpdaters(container, true);\n        await this._interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse?.position, overrideOptions, group);\n        }\n    }\n    async redraw() {\n        this.clear();\n        await this.init();\n        this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = defaultRemoveQuantity, group, override) {\n        const minIndex = 0;\n        if (index < minIndex || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            if (this._removeParticle(i--, group, override)) {\n                deleted++;\n            }\n        }\n    }\n    removeQuantity(quantity, group) {\n        const defaultIndex = 0;\n        this.removeAt(defaultIndex, quantity, group);\n    }\n    setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups, manualCount = 0;\n        for (const group in groups) {\n            this._applyDensity(groups[group], manualCount, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    setLastZIndex(zIndex) {\n        this._lastZIndex = zIndex;\n        this._needsSort = this._needsSort || this._lastZIndex < zIndex;\n    }\n    setResizeFactor(factor) {\n        this._resizeFactor = factor;\n    }\n    update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.update?.(delta);\n        }\n        const resizeFactor = this._resizeFactor;\n        for (const particle of this._array) {\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            this._interactionManager.reset(particle);\n            for (const [, plugin] of this._container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                plugin.particleUpdate?.(particle, delta);\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            for (const particle of particlesToDelete) {\n                this._engine.dispatchEvent(\"particleRemoved\", {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n            }\n            this._addToPool(...particlesToDelete);\n        }\n        this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete this._resizeFactor;\n        if (this._needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            const lengthOffset = 1;\n            this._lastZIndex = zArray[zArray.length - lengthOffset].position.z;\n            this._needsSort = false;\n        }\n    }\n}\n","import { getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { isSsr } from \"../Utils/Utils.js\";\nconst defaultRatio = 1, defaultReduceFactor = 1;\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = defaultRatio;\n        this.reduceFactor = defaultReduceFactor;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? defaultRatio : window.devicePixelRatio;\n        this.reduceFactor = defaultReduceFactor;\n        const ratio = this.pixelRatio, canvas = container.canvas;\n        if (canvas.element) {\n            const element = canvas.element;\n            canvas.size.width = element.offsetWidth * ratio;\n            canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n","import { errorPrefix, millisecondsToSeconds } from \"./Utils/Constants.js\";\nimport { getLogger, safeIntersectionObserver } from \"../Utils/Utils.js\";\nimport { Canvas } from \"./Canvas.js\";\nimport { EventListeners } from \"./Utils/EventListeners.js\";\nimport { Options } from \"../Options/Classes/Options.js\";\nimport { Particles } from \"./Particles.js\";\nimport { Retina } from \"./Retina.js\";\nimport { getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { loadOptions } from \"../Utils/OptionsUtils.js\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nconst defaultFps = 60;\nfunction initDelta(value, fpsLimit = defaultFps, smooth = false) {\n    return {\n        value,\n        factor: smooth ? defaultFps / fpsLimit : (defaultFps * value) / millisecondsToSeconds,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this._intersectionManager = (entries) => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                if (entry.isIntersecting) {\n                    void this.play();\n                }\n                else {\n                    this.pause();\n                }\n            }\n        };\n        this._nextFrame = (timestamp) => {\n            try {\n                if (!this._smooth &&\n                    this._lastFrameTime !== undefined &&\n                    timestamp < this._lastFrameTime + millisecondsToSeconds / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this._lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this._lastFrameTime, this.fpsLimit, this._smooth);\n                this.addLifeTime(delta.value);\n                this._lastFrameTime = timestamp;\n                if (delta.value > millisecondsToSeconds) {\n                    this.draw(false);\n                    return;\n                }\n                this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.animationStatus) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.id = Symbol(id);\n        this.fpsLimit = 120;\n        this._smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this._lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        this._intersectionObserver = safeIntersectionObserver((entries) => this._intersectionManager(entries));\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get animationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            }, radius = 1;\n            clickOrTouchHandler(e, pos, radius);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                const lengthOffset = 1;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - lengthOffset];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, minCoordinate = 0, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : minCoordinate),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : minCoordinate),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, effectDrawer] of this.effectDrawers) {\n            effectDrawer.destroy?.(this);\n        }\n        for (const [, shapeDrawer] of this.shapeDrawers) {\n            shapeDrawer.destroy?.(this);\n        }\n        for (const key of this.effectDrawers.keys()) {\n            this.effectDrawers.delete(key);\n        }\n        for (const key of this.shapeDrawers.keys()) {\n            this.shapeDrawers.delete(key);\n        }\n        this._engine.clearPlugins(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this), minIndex = 0;\n        if (idx >= minIndex) {\n            const deleteCount = 1;\n            mainArr.splice(idx, deleteCount);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        const frame = (timestamp) => {\n            if (refreshTime) {\n                this._lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            this._nextFrame(timestamp);\n        };\n        this._drawAnimationFrame = requestAnimationFrame((timestamp) => frame(timestamp));\n    }\n    async export(type, options = {}) {\n        for (const [, plugin] of this.plugins) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            plugin.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const effects = this._engine.getSupportedEffects();\n        for (const type of effects) {\n            const drawer = this._engine.getEffectDrawer(type);\n            if (drawer) {\n                this.effectDrawers.set(type, drawer);\n            }\n        }\n        const shapes = this._engine.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.getShapeDrawer(type);\n            if (drawer) {\n                this.shapeDrawers.set(type, drawer);\n            }\n        }\n        await this.particles.initPlugins();\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = await this._engine.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this._duration = getRangeValue(this.actualOptions.duration) * millisecondsToSeconds;\n        this._delay = getRangeValue(this.actualOptions.delay) * millisecondsToSeconds;\n        this._lifeTime = 0;\n        const defaultFpsLimit = 120, minFpsLimit = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > minFpsLimit ? this.actualOptions.fpsLimit : defaultFpsLimit;\n        this._smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.effectDrawers) {\n            await drawer.init?.(this);\n        }\n        for (const [, drawer] of this.shapeDrawers) {\n            await drawer.init?.(this);\n        }\n        for (const [, plugin] of this.plugins) {\n            await plugin.init?.();\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        await this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            plugin.particlesSetup?.();\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimationFrame(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.pause?.();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate ?? false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = undefined;\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            const start = async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    await plugin.start?.();\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            };\n            this._delayTimeout = setTimeout(() => void start(), this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.stop?.();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this._responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this._responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n"],"names":["setTransformValue","factor","newFactor","key","newValue","_factor$key","undefined","setStyle","canvas","style","important","arguments","length","elementStyle","value","setProperty","Canvas","constructor","container","this","_applyPostDrawUpdaters","particle","updater","_postDrawUpdaters","_updater$afterDraw","afterDraw","call","_applyPreDrawUpdaters","ctx","radius","zOpacity","colorStyles","transform","_preDrawUpdaters","_updater$beforeDraw","getColorStyles","fill","stroke","getTransformValues","updaterTransform","beforeDraw","_applyResizePlugins","plugin","_resizePlugins","_plugin$resize","resize","_getPluginParticleColors","fColor","sColor","_colorPlugins","particleFillColor","rangeColorToHsl","particleStrokeColor","_initCover","async","cover","actualOptions","backgroundMask","color","coverRgb","rangeColorToRgb","coverColor","a","opacity","_coverColorStyle","getStyleFromRgb","Promise","resolve","reject","image","img","document","createElement","addEventListener","_coverImage","evt","error","src","_initStyle","element","options","_fullScreen","_originalStyle","deepExtend","_setFullScreenStyle","_resetOriginalStyle","_initTrail","trail","particles","move","trailFill","enable","fillColor","_trailFill","_paintBase","baseColor","draw","paintBase","size","_paintImage","paintImage","_repairStyle","_safeMutationObserver","observer","disconnect","initBackground","observe","attributes","originalStyle","callback","_mutationObserver","position","zIndex","fullScreen","toString","top","left","width","height","_context","_generated","clear","paint","destroy","stop","remove","cb","drawAsync","drawParticle","delta","_particle$getStrokeCo","spawning","destroyed","getRadius","pfColor","getFillColor","psColor","getStrokeColor","_ref","_particle$bubble$opac","_particle$opacity","_particle$strokeOpaci","zIndexOptions","zIndexFactor","zOpacityFactor","opacityRate","bubble","zStrokeOpacity","strokeOpacity","getStyleFromHsl","context","composite","sizeRate","shadow","drawParticlePlugin","drawPlugin","init","obs","safeMutationObserver","records","record","type","attributeName","e","getLogger","initUpdaters","initPlugins","background","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","repeat","backgroundSize","plugins","_plugin$particleFillC","push","updaters","_ref2","_updater$getColorStyl","loadCanvas","dataset","generatedAttribute","ariaHidden","offsetHeight","offsetWidth","getContext","retina","pxRatio","pixelRatio","newSize","oldSize","started","setResizeFactor","windowResize","needsRefresh","updateActualOptions","setDensity","refresh","manageListener","event","handler","add","addOptions","passive","isBoolean","capture","removeOptions","removeEventListener","EventListeners","_doMouseTouchClick","_canPush","mouseInteractivity","interactivity","mouse","mousePos","clickPosition","clickTime","Date","getTime","onClick","events","executeOnSingleOrMultiple","mode","handleClickMode","setTimeout","_mouseTouchFinish","_handleThemeChange","mediaEvent","defaultThemes","themeName","matches","dark","light","theme","themes","find","name","default","auto","loadTheme","_handleVisibilityChange","pauseOnBlur","hidden","pageHidden","pause","animationStatus","play","_handleWindowResize","_resizeTimeout","clearTimeout","handleResize","delay","millisecondsToSeconds","_manageInteractivityListeners","mouseLeaveTmpEvent","handlers","_handlers","interactivityEl","html","canvasEl","pointerEvents","onHover","mouseMoveEvent","mouseMove","touchStartEvent","touchStart","touchMoveEvent","touchMove","touchEndEvent","touchEndClick","mouseUpEvent","mouseUp","mouseDownEvent","mouseDown","touchEnd","mouseLeave","touchCancelEvent","touchCancel","_manageListeners","detectType","detectsOn","mouseLeaveEvent","window","mouseOutEvent","_canvasEl$parentEleme","parentElement","parentNode","_manageMediaMatch","_manageResize","visibilityChangeEvent","visibilityChange","mediaMatch","safeMatchMedia","addListener","oldThemeChange","removeListener","themeChange","ResizeObserver","resizeEvent","_resizeObserver","unobserve","entries","target","_mouseDown","clicking","downPosition","_mouseTouchClick","inside","handled","mousePosition","clickPositionValid","status","_mouseTouchMove","pos","startsWith","mouseEvent","clientRect","getBoundingClientRect","x","clientX","y","clientY","source","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","_mouseEvent$offsetX","_mouseEvent$offsetY","_mouseEvent$offsetX2","_mouseEvent$offsetY2","_canvasRect$left","_canvasRect$top","touchEvent","lengthOffset","lastTouch","touches","defaultCoordinate","_touchEnd","Array","from","changedTouches","touch","_touches","delete","identifier","_touchEndClick","_touchStart","set","performance","now","Map","addListeners","removeListeners","InteractionManager","engine","_engine","_interactors","_externalInteractors","_particleInteractors","externalInteract","interactor","isEnabled","interact","_interactor$handleCli","getInteractors","particlesInteract","reset","half","fixOutMode","data","isInArray","outMode","checkModes","diameter","coord","maxCoord","setCb","Particle","_this","_calcPosition","_outModes$left","_outModes$right","_outModes$top","_outModes$bottom","tryCount","pluginPos","particlePosition","Vector3d","create","canvasSize","exactPosition","calcExactPositionOrRandomFromSize","outModes","fixHorizontal","fixVertical","right","bottom","_checkOverlap","increment","_calculateVelocity","res","getParticleBaseVelocity","direction","copy","moveOptions","rad","degToRad","getRangeValue","angle","radOffset","offset","range","straight","randomInRange","setRangeValue","random","speed","getRandom","collisionsOptions","collisions","overlapOptions","overlap","retries","Error","concat","errorPrefix","getDistance","_getRollColor","_this$roll$angle","roll","backColor","alter","backFactor","horizontal","vertical","double","backSum","Math","PI","floor","alterHsl","_initPosition","_this$options$move$ce","_this$options$move$ce2","zIndexValue","clamp","zLayers","initialPosition","moveCenter","getPosition","center","getParticleDirectionAngle","outType","Vector","origin","override","_shapeDrawer$particle","unbreakable","inRange","slow","pathGenerator","shapeDrawer","shapeDrawers","get","shape","particleDestroy","_plugin$particleDestr","particleDestroyed","_updater$particleDest","dispatchEvent","_this$bubble$color","getHslFromAnimation","getMass","z","_this$bubble$radius","_this$bubble$color2","strokeColor","id","overrideOptions","group","_effectData$fill","_effectData$close","_shapeData$fill","_shapeData$close","_effectDrawer","_shapeDrawer","_shapeDrawer2","_effectDrawer2","_effectDrawer2$partic","_shapeDrawer3","_shapeDrawer3$particl","effectClose","effectFill","shapeClose","shapeFill","pathRotation","lastPathTime","rotation","misplaced","maxDistance","ignoresResizeRatio","mainOptions","particlesOptions","loadParticlesOptions","effectType","effect","shapeType","reduceDuplicates","itemFromSingleOrMultiple","effectOptions","shapeOptions","_overrideOptions$effe","_overrideOptions$shap","overrideEffectType","load","overrideShapeType","effectData","close","loadEffectData","shapeData","loadShapeData","Interactivity","pathOptions","path","pathDelay","generator","getPathGenerator","addPath","initParticle","initParticleNumericAnimationValue","initialVelocity","velocity","moveDecay","decay","setLastZIndex","sides","effectDrawer","effectDrawers","getEffectDrawer","loadEffect","getShapeDrawer","loadShape","sideCountFunc","getSidesCount","shadowColor","mover","movers","_mover$init","particleInit","_plugin$particleCreat","particleCreated","isInsideCanvas","isVisible","_updater$reset","Point","QuadTree","rectangle","capacity","_subdivide","i","fixedIndex","_subs","Rectangle","round","_divided","_points","insert","point","contains","some","sub","query","check","intersects","p","queryCircle","Circle","queryRectangle","qTreeRectangle","Particles","_addToPool","_len","_key","_pool","_applyDensity","manualCount","_options$number$densi","numberOptions","number","density","_limit","limit","_groupLimits","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","min","particlesCount","count","filter","t","abs","removeQuantity","densityOptions","_container","_pushParticle","initializer","pop","_nextId","canAdd","_array","_zArray","warning","_removeParticle","index","zIdx","indexOf","splice","_needsSort","_lastZIndex","_interactionManager","_pluginsInitialized","quadTree","addManualParticles","manualParticles","addParticle","_this$_groupLimits$ge","limitOptions","currentCount","countToRemove","update","condition","particlesInitialization","groups","groupOptions","j","_groupOptions$number","getMovers","getUpdaters","pathGenerators","nb","redraw","removeAt","quantity","deleted","_resizeFactor","particlesToDelete","Set","_plugin$update","resizeFactor","_plugin$particleUpdat","particleUpdate","checkDelete","has","zArray","sort","b","Retina","reduceFactor","detectRetina","isSsr","devicePixelRatio","ratio","maxSpeed","gravity","sizeAnimationSpeed","animation","moveDistance","distance","props","moveDrift","drift","moveSpeed","guardCheck","loadContainerOptions","Options","sourceOptionsArr","loadOptions","Container","sourceOptions","_intersectionManager","pauseOnOutsideViewport","entry","isIntersecting","_nextFrame","timestamp","_this$_lastFrameTime","_smooth","_lastFrameTime","fpsLimit","initDelta","addLifeTime","alive","Symbol","_delay","_duration","_lifeTime","_firstStart","_paused","_sourceOptions","_initialSourceOptions","_options","_eventListeners","_intersectionObserver","safeIntersectionObserver","addClickHandler","el","clickOrTouchHandler","posRetina","touched","touchMoved","touchStartHandler","touchMoveHandler","minCoordinate","max","radiusX","radiusY","touchCancelHandler","_effectDrawer$destroy","_shapeDrawer$destroy","keys","clearPlugins","mainArr","dom","idx","findIndex","deleteCount","force","refreshTime","frame","_drawAnimationFrame","requestAnimationFrame","export","supported","blob","_plugin$handleClickMo","effects","getSupportedEffects","drawer","shapes","getSupportedShapes","availablePlugins","getAvailablePlugins","duration","smooth","_drawer$init","_drawer$init2","_plugin$init","_plugin$particlesSetu","particlesSetup","_currentTheme","cancelAnimationFrame","_plugin$pause","needsUpdate","autoPlay","start","HTMLElement","_plugin$start","_delayTimeout","_plugin$stop","responsive","newMaxWidth","setResponsive","setTheme","_responsiveMaxWidth"],"sourceRoot":""}